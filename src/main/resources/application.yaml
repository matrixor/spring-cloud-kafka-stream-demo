spring:
  cloud:
    stream:
      default: 
         producer: 
          useNativeEncoding: true
         consumer:  
          useNativeEncoding: true     
      bindings:
        input:
          destination: CustomerBalance
          content-type: application/*+avro
          group: group-2
          #concurrency: 3
        output:
          destination: CustomerBalance
          content-type: application/*+avro      
        input1:
          destination: Customer
          content-type: application/*+avro
          group: group-1
          #concurrency: 3
        output1:
          destination: Customer
          content-type: application/*+avro
        input2:
          destination: Balance
          content-type: application/*+avro
          group: group-1
          #concurrency: 3
        output2:
          destination: Balance
          content-type: application/*+avro
        input3:
          destination: Customer
          content-type: application/*+avro
          group: group-2
          #concurrency: 3
        output3:
          destination: CustomerBalance
          content-type: application/*+avro            
      kafka:
          binder:        
           producer-properties:
             key.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
             value.serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
             schema.registry.url: http://localhost:8081 
           consumer-properties:
             key.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
             value.deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
             schema.registry.url: http://localhost:8081
             specific.avro.reader: true